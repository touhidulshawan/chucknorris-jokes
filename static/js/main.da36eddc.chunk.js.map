{"version":3,"sources":["assets/sync-solid.svg","App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","isLoading","setIsLoading","useEffect","getData","a","fetch","response","json","className","src","icon_url","alt","value","onClick","reload","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,G,MAAA,IAA0B,wC,OC0C1BA,EAtCH,WAAO,IAAD,EACQC,qBADR,mBACTC,EADS,KACHC,EADG,OAEkBF,oBAAS,GAF3B,mBAETG,EAFS,KAEEC,EAFF,KAIhBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAO,uCAAG,8BAAAC,EAAA,6DACdH,GAAa,GADC,SAESI,MAAM,2CAFf,cAERC,EAFQ,gBAGKA,EAASC,OAHd,OAGRT,EAHQ,OAIdC,EAAQD,GACRG,GAAa,GALC,2CAAH,qDAQb,OACE,qBAAKO,UAAU,YAAf,SACGR,EACC,qBAAKQ,UAAU,UAAf,wBAEA,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,cAAd,0BACA,qBACEA,UAAU,eACVC,IAAKX,EAAKY,SACVC,IAAI,iBAEN,mBAAGH,UAAU,YAAb,SAA0BV,EAAKc,QAC/B,wBAAQJ,UAAU,SAASK,QAASV,EAApC,SACE,qBAAKM,IAAKK,EAAQH,IAAI,cAAcI,MAAM,KAAKC,OAAO,eCtBnDC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da36eddc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sync-solid.9dc210e8.svg\";","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport reload from \"./assets/sync-solid.svg\";\n\nconst App = () => {\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://api.chucknorris.io/jokes/random\");\n    const data = await response.json();\n    setData(data);\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <div className=\"loading\">Loading...</div>\n      ) : (\n        <div className=\"joke__container\">\n          <h1 className=\"joke__title\">Chuck Norris</h1>\n          <img\n            className=\"joke__avatar\"\n            src={data.icon_url}\n            alt=\"chuck norris\"\n          />\n          <p className=\"joke_text\">{data.value}</p>\n          <button className=\"reload\" onClick={getData}>\n            <img src={reload} alt=\"reload icon\" width=\"20\" height=\"20\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}